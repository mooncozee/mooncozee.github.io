{"version":3,"sources":["Live.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Live","state","live","this","updateLiveList","setInterval","fetch","then","res","json","setState","channels","Object","values","length","id","sort","a","b","viewers","map","channel","className","href","chatters","src","Date","now","title","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAkFeA,E,4MAjEXC,MAAmB,CACXC,KAAM,I,kEAGO,IAAD,OAChBC,KAAKC,iBACLC,aAAY,kBAAM,EAAKD,mBAAkB,Q,uCAG3B,IAAD,OAEbE,MAAM,wEACLC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACL,GACH,EAAKQ,SAAS,CACVR,KAAMA,EAAI,Y,+BAMlB,IAAIS,EAAWC,OAAOC,OAAOV,KAAKF,MAAMC,MAExC,OAAwB,IAApBS,EAASG,OAEL,qBAAKC,GAAG,OAAR,qDAIRJ,EAASK,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,QAAUF,EAAEE,WAGlC,qBAAKJ,GAAG,OAAR,SACKJ,EAASS,KAAI,SAACC,GACX,OACI,sBAAKC,UAAU,wCAAwCP,GAAI,WAAaM,EAAQA,QAAhF,UACI,sBAAKC,UAAU,eAAf,UACI,qBAAKA,UAAU,WAAf,SACI,mBAAGC,KAAM,0BAA4BF,EAAQA,QAA7C,SACKA,EAAQA,YAGjB,gCACI,iCAASA,EAAQF,UADrB,cAGA,gCACI,iCAASE,EAAQG,WADrB,iBAIJ,sBAAKF,UAAU,UAAf,UACI,mBAAGC,KAAM,0BAA4BF,EAAQA,QAA7C,SACI,qBAAKI,IAAK,+CAAiDJ,EAAQA,QAAU,QAAUK,KAAKC,UAEhG,8BACKN,EAAQO,wB,GAvD1BC,IAAMC,WCcVC,MAzBf,WACE,OACE,sBAAKT,UAAU,MAAf,UACI,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBAAf,SACI,qBAAKP,GAAG,MAAMO,UAAU,cAAxB,SACE,qBAAKP,GAAG,OAAOO,UAAU,QAAzB,iCAKN,qBAAKA,UAAU,wBAEjB,sBAAKP,GAAG,OAAOO,UAAU,MAAzB,UACE,qBAAKA,UAAU,qBACb,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,MAEJ,qBAAKA,UAAU,4BCVVU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a2194c2b.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface LiveData {\n   chatters: number;\n   channel: string;\n   viewers: number;\n   title: string; \n}\n\ntype LiveProps = {};\n\ntype LiveState = {\n    live: {[key: string]: LiveData};\n}\n\n\nclass Live extends React.Component<LiveProps, LiveState> {\n    state: LiveState = {\n            live: {},\n    }\n\n    componentDidMount() {\n        this.updateLiveList();\n        setInterval(() => this.updateLiveList(), 1000 * 60 * 2)\n    }\n\n    updateLiveList() {\n//        fetch('http://localhost:8080/live.json')\n        fetch('http://ec2-3-15-43-43.us-east-2.compute.amazonaws.com:8080/live.json')\n        .then((res) => res.json())\n        .then((live) => {\n            this.setState({\n                live: live[\"live\"]\n            })\n        });\n    }\n\n    render() {\n        let channels = Object.values(this.state.live);\n\n        if (channels.length === 0) {\n            return (\n                <div id=\"live\">No lewdtubers are currently live on CB</div>\n            )\n        }\n\n        channels.sort((a, b) => b.viewers - a.viewers);\n\n        return (\n            <div id=\"live\">\n                {channels.map((channel) => {\n                    return (\n                        <div className=\"live-channel card grey-text lighten-5\" id={\"channel-\" + channel.channel}>\n                            <div className=\"channel-info\">\n                                <div className=\"username\">\n                                    <a href={\"https://chaturbate.com/\" + channel.channel}>\n                                        {channel.channel}\n                                    </a>\n                                </div>\n                                <div>\n                                    <strong>{channel.viewers}</strong> viewers\n                                </div>\n                                <div>\n                                    <strong>{channel.chatters}</strong> in chat\n                                </div>\n                            </div>\n                            <div className=\"playing\">\n                                <a href={\"https://chaturbate.com/\" + channel.channel}>\n                                    <img src={\"https://roomimg.stream.highwebmedia.com/riw/\" + channel.channel + \".jpg?\" + Date.now()} />\n                                </a>\n                                <div>\n                                    {channel.title}\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default Live;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Live from './Live';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"col s0 m1 l2 xl3\"></div>\n          <div className=\"col s12 m10 l8 xl6\">\n              <div id=\"nav\" className=\"nav-wrapper\">\n                <div id=\"logo\" className=\"title\">\n                  Live Lewdtubers\n                </div>\n              </div>\n          </div>\n          <div className=\"col s0 m1 l2 xl3\"></div>\n        </div>\n        <div id=\"page\" className=\"row\">\n          <div className=\"col s0 m1 l2 xl3\"></div>\n            <div className=\"col s12 m10 l8 xl6\">\n              <Live />\n            </div>\n          <div className=\"col s0 m1 l2 xl3\"></div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}